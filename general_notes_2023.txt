# 15 Python Libraries
1. Pendulum -> for Datetime
2. pydpf -> for pdf
3. icecream -> for debugging (ic instead of print)
4. loguru -> library for logging
5. rich -> render types of doc
6. argparse -> build cmd line interface
7. tqdm -> progress bar
8. Xarray -> multidimensional layered data
9. Polars -> dataframe library
10. seaborn -> statistical data visualization
11. result -> alternative to handling errors using exception handling
12. pydantic -> data validation
13. FastAPI -> modern web framework
14. sqlmodel -> sql alchemy + pydantic
15. httpx -> async support
16. python-dotenv -> for .env files


# What Can 1970s German Industrial Design Principles Teach Us?
Good design:
1. is innovative
2. makes the product useful
3. is aesthetic
4. makes a product understandable
5. is unobstrusive
6. is honest
7. is long-lasting
8. is through down to the last detail
9. is environmentally friendly
10. is as little design as possible


# 7 Tips To Structure Your Python Data Science Projects
1. Use a common structure (ex. cookie cutter)
2. Use existing libraries (ex. pandas, scikit-learn, pytorch, sqlalchemy)
    Note: useful to have a pipeline (ex. taipy)
3. Log your results (ex. comet)
4. Use intermediate data representation
5. Move reusable code to a shared editable package
6. Move configuration to a separate file
7. Write unit tests


# 5 Ways First Principles Thinking Helps You Code Better
1. Identify and define the fundamental truths 
    -> understand the problem and the properties of the tools
2. Break problems down to their core
3. Reassemble elements innovatively
4. Validate your assumptions regularly
5. Focus on simplicity and functionality
Bonus: Make sure you learn continuously